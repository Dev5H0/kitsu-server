name: Kitsu API Deployment

on: [deployment]

env:
  SENTRY_ORG: kitsu
  SENTRY_PROJECT: server
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_TOKEN }}

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
    - name: Report Deployment Starting
      uses: octokit/request-action@v2.x
      with:
        route: POST /repos/:repo/deployments/:deployment_id/statuses
        repo: ${{ github.repository }}
        deployment_id: ${{ github.event.deployment.id }}
        environment: staging
        state: in_progress
        log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        mediaType: '{"previews": ["flash", "ant-man"]}'
      env:
        GITHUB_TOKEN: ${{ secrets.SENKO_SAN_KEY }}
    - name: Install Sentry CLI
      run: curl -sL https://sentry.io/get-cli/ | bash
    - name: Report Release to Sentry
      run: sentry-cli releases new ${GITHUB_SHA::8}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Checkout Repository
      uses: actions/checkout@v1

    - name: Add Commits to Sentry Release
      run: sentry-cli releases set-commits --auto ${GITHUB_SHA::8}
    - name: Connect to Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: Senkosan
        password: ${{ secrets.SENKO_SAN_KEY }}

    - name: Build Docker Image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ghcr.io/hummingbird-me/kitsu-server:${GITHUB_SHA::8}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Finalize Sentry Release
      if: success()
      run: sentry-cli releases finalize ${GITHUB_SHA::8}
    - name: Report Deployment Success
      uses: octokit/request-action@v2.x
      if: success()
      with:
        route: POST /repos/:repo/deployments/:deployment_id/statuses
        repo: ${{ github.repository }}
        deployment_id: ${{ github.event.deployment.id }}
        environment: staging
        log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        state: success
        mediaType: '{"previews": ["flash", "ant-man"]}'
      env:
        GITHUB_TOKEN: ${{ secrets.SENKO_SAN_KEY }}
    - name: Report Deployment Failure
      uses: octokit/request-action@v2.x
      if: failure()
      with:
        route: POST /repos/:repo/deployments/:deployment_id/statuses
        repo: ${{ github.repository }}
        deployment_id: ${{ github.event.deployment.id }}
        environment: staging
        log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        environment_url: https://latest.staging.kitsu.io
        state: failure
        mediaType: '{"previews": ["flash", "ant-man"]}'
      env:
        GITHUB_TOKEN: ${{ secrets.SENKO_SAN_KEY }}

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Install Dependencies
      run: sudo snap install yq

    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.SENKO_SAN_KEY }}
        repository: hummingbird-me/kitsu-ops
        path: ops

    - name: Configure Git
      working-directory: ops
      run: |
        git config user.name "Senko-san"
        git config user.email "developers@kitsu.io"

    - name: Update Image Version
      working-directory: ops
      run: ./kubernetes/apps/kitsu-api/bin/update.sh staging ${GITHUB_SHA::8}

    - name: Push to Github
      working-directory: ops
      run: git push
